{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\nvar PanelView = /** @class */function (_super) {\n  __extends(PanelView, _super);\n  function PanelView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.handleClose = function () {\n      return _this.props.onClose(_this.props.panel);\n    };\n    return _this;\n  }\n  PanelView.prototype.render = function () {\n    var _a = this.props,\n      panel = _a.panel,\n      onOpen = _a.onOpen;\n    // two <span> tags in header ensure title is centered as long as\n    // possible, due to `flex: 1` magic.\n    return React.createElement(\"div\", {\n      className: Classes.PANEL_STACK_VIEW\n    }, this.maybeRenderHeader(), React.createElement(panel.component, __assign({\n      openPanel: onOpen,\n      closePanel: this.handleClose\n    }, panel.props)));\n  };\n  PanelView.prototype.maybeRenderHeader = function () {\n    if (!this.props.showHeader) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      className: Classes.PANEL_STACK_HEADER\n    }, React.createElement(\"span\", null, this.maybeRenderBack()), React.createElement(Text, {\n      className: Classes.HEADING,\n      ellipsize: true,\n      title: this.props.panel.htmlTitle\n    }, this.props.panel.title), React.createElement(\"span\", null));\n  };\n  PanelView.prototype.maybeRenderBack = function () {\n    if (this.props.previousPanel === undefined) {\n      return null;\n    }\n    return React.createElement(Button, {\n      \"aria-label\": \"Back\",\n      className: Classes.PANEL_STACK_HEADER_BACK,\n      icon: \"chevron-left\",\n      minimal: true,\n      onClick: this.handleClose,\n      small: true,\n      text: this.props.previousPanel.title,\n      title: this.props.previousPanel.htmlTitle\n    });\n  };\n  return PanelView;\n}(AbstractPureComponent2);\nexport { PanelView };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,EAAEC,OAAO,QAAQ,cAAc;AAC9D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,IAAI,QAAQ,cAAc;AA4BnC;EAA+BC;EAA/B;IAAA;IA8CYC,iBAAW,GAAG;MAAM,YAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAI,CAACC,KAAK,CAACE,KAAK,CAAC;IAApC,CAAoC;;EACpE;EA9CWC,0BAAM,GAAb;IACU,SAAoB,IAAI,CAACH,KAAK;MAA5BE,KAAK;MAAEE,MAAM,YAAe;IACpC;IACA;IACA,OACIX;MAAKY,SAAS,EAAEV,OAAO,CAACW;IAAgB,GACnC,IAAI,CAACC,iBAAiB,EAAE,EACzBd,oBAACS,KAAK,CAACM,SAAS;MAACC,SAAS,EAAEL,MAAM;MAAEM,UAAU,EAAE,IAAI,CAACC;IAAW,GAAMT,KAAK,CAACF,KAAK,EAAI,CACnF;EAEd,CAAC;EAEOG,qCAAiB,GAAzB;IACI,IAAI,CAAC,IAAI,CAACH,KAAK,CAACY,UAAU,EAAE;MACxB,OAAO,IAAI;;IAEf,OACInB;MAAKY,SAAS,EAAEV,OAAO,CAACkB;IAAkB,GACtCpB,kCAAO,IAAI,CAACqB,eAAe,EAAE,CAAQ,EACrCrB,oBAACI,IAAI;MAACQ,SAAS,EAAEV,OAAO,CAACoB,OAAO;MAAEC,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE,IAAI,CAACjB,KAAK,CAACE,KAAK,CAACgB;IAAS,GAC/E,IAAI,CAAClB,KAAK,CAACE,KAAK,CAACe,KAAK,CACpB,EACPxB,iCAAQ,CACN;EAEd,CAAC;EAEOU,mCAAe,GAAvB;IACI,IAAI,IAAI,CAACH,KAAK,CAACmB,aAAa,KAAKC,SAAS,EAAE;MACxC,OAAO,IAAI;;IAEf,OACI3B,oBAACG,MAAM;MAAA,cACQ,MAAM;MACjBS,SAAS,EAAEV,OAAO,CAAC0B,uBAAuB;MAC1CC,IAAI,EAAC,cAAc;MACnBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI,CAACb,WAAW;MACzBc,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI,CAAC1B,KAAK,CAACmB,aAAa,CAACF,KAAK;MACpCA,KAAK,EAAE,IAAI,CAACjB,KAAK,CAACmB,aAAa,CAACD;IAAS,EAC3C;EAEV,CAAC;EAGL,gBAAC;AAAD,CAAC,CA/C8BxB,sBAAsB","names":["React","AbstractPureComponent2","Classes","Button","Text","__extends","_this","props","onClose","panel","PanelView","onOpen","className","PANEL_STACK_VIEW","maybeRenderHeader","component","openPanel","closePanel","handleClose","showHeader","PANEL_STACK_HEADER","maybeRenderBack","HEADING","ellipsize","title","htmlTitle","previousPanel","undefined","PANEL_STACK_HEADER_BACK","icon","minimal","onClick","small","text"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/panel-stack/panelView.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\nimport { IPanel } from \"./panelProps\";\n\n/* eslint-disable deprecation/deprecation */\n\nexport interface IPanelViewProps {\n    /**\n     * Callback invoked when the user presses the back button or a panel invokes\n     * the `closePanel()` injected prop method.\n     */\n    onClose: (removedPanel: IPanel<any>) => void;\n\n    /**\n     * Callback invoked when a panel invokes the `openPanel(panel)` injected\n     * prop method.\n     */\n    onOpen: (addedPanel: IPanel<any>) => void;\n\n    /** The panel to be displayed. */\n    panel: IPanel;\n\n    /** The previous panel in the stack, for rendering the \"back\" button. */\n    previousPanel?: IPanel;\n\n    /** Whether to show the header with the \"back\" button. */\n    showHeader: boolean;\n}\n\nexport class PanelView extends AbstractPureComponent2<IPanelViewProps> {\n    public render() {\n        const { panel, onOpen } = this.props;\n        // two <span> tags in header ensure title is centered as long as\n        // possible, due to `flex: 1` magic.\n        return (\n            <div className={Classes.PANEL_STACK_VIEW}>\n                {this.maybeRenderHeader()}\n                <panel.component openPanel={onOpen} closePanel={this.handleClose} {...panel.props} />\n            </div>\n        );\n    }\n\n    private maybeRenderHeader() {\n        if (!this.props.showHeader) {\n            return null;\n        }\n        return (\n            <div className={Classes.PANEL_STACK_HEADER}>\n                <span>{this.maybeRenderBack()}</span>\n                <Text className={Classes.HEADING} ellipsize={true} title={this.props.panel.htmlTitle}>\n                    {this.props.panel.title}\n                </Text>\n                <span />\n            </div>\n        );\n    }\n\n    private maybeRenderBack() {\n        if (this.props.previousPanel === undefined) {\n            return null;\n        }\n        return (\n            <Button\n                aria-label=\"Back\"\n                className={Classes.PANEL_STACK_HEADER_BACK}\n                icon=\"chevron-left\"\n                minimal={true}\n                onClick={this.handleClose}\n                small={true}\n                text={this.props.previousPanel.title}\n                title={this.props.previousPanel.htmlTitle}\n            />\n        );\n    }\n\n    private handleClose = () => this.props.onClose(this.props.panel);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}