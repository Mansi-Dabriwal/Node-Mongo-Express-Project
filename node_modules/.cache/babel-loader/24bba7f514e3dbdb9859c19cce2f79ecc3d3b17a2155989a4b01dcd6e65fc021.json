{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT, CONTEXTMENU_WARN_DECORATOR_NO_METHOD } from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { isDarkTheme } from \"../../common/utils/isDarkTheme\";\nimport * as ContextMenu from \"./contextMenu\";\n/* eslint-disable deprecation/deprecation */\n/** @deprecated use ContextMenu2 */\nexport function ContextMenuTarget(WrappedComponent) {\n  var _a;\n  if (!isFunction(WrappedComponent.prototype.renderContextMenu)) {\n    console.warn(CONTEXTMENU_WARN_DECORATOR_NO_METHOD);\n  }\n  return _a = /** @class */function (_super) {\n    __extends(ContextMenuTargetClass, _super);\n    function ContextMenuTargetClass() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContextMenuTargetClass.prototype.render = function () {\n      var _this = this;\n      var element = _super.prototype.render.call(this);\n      if (element == null) {\n        // always return `element` in case caller is distinguishing between `null` and `undefined`\n        return element;\n      }\n      if (!React.isValidElement(element)) {\n        console.warn(CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n        return element;\n      }\n      var oldOnContextMenu = element.props.onContextMenu;\n      var onContextMenu = function (e) {\n        // support nested menus (inner menu target would have called preventDefault())\n        if (e.defaultPrevented) {\n          return;\n        }\n        if (isFunction(_this.renderContextMenu)) {\n          var menu = _this.renderContextMenu(e);\n          if (menu != null) {\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n            /* eslint-disable-next-line react/no-find-dom-node */\n            var darkTheme = isDarkTheme(ReactDOM.findDOMNode(_this));\n            e.preventDefault();\n            ContextMenu.show(menu, {\n              left: e.clientX,\n              top: e.clientY\n            }, _this.onContextMenuClose, darkTheme);\n          }\n        }\n        oldOnContextMenu === null || oldOnContextMenu === void 0 ? void 0 : oldOnContextMenu(e);\n      };\n      return React.cloneElement(element, {\n        onContextMenu: onContextMenu\n      });\n    };\n    return ContextMenuTargetClass;\n  }(WrappedComponent), _a.displayName = \"ContextMenuTarget(\".concat(getDisplayName(WrappedComponent), \")\"), _a;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,QAAQ,MAAM,WAAW;AAGrC,SACIC,8CAA8C,EAC9CC,oCAAoC,QACjC,qBAAqB;AAC5B,SAASC,cAAc,EAAEC,UAAU,QAAQ,oBAAoB;AAC/D,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAO,KAAKC,WAAW,MAAM,eAAe;AAQ5C;AAEA;AACA,OAAM,SAAUC,iBAAiB,CAAsDC,gBAAmB;;EACtG,IAAI,CAACJ,UAAU,CAACI,gBAAgB,CAACC,SAAS,CAACC,iBAAiB,CAAC,EAAE;IAC3DC,OAAO,CAACC,IAAI,CAACV,oCAAoC,CAAC;;EAGtD;IAA4CW;IAArC;;IAsCP;IAnCWC,uCAAM,GAAb;MAAA;MACI,IAAMC,OAAO,GAAGC,iBAAMC,MAAM,WAAE;MAE9B,IAAIF,OAAO,IAAI,IAAI,EAAE;QACjB;QACA,OAAOA,OAAO;;MAGlB,IAAI,CAAChB,KAAK,CAACmB,cAAc,CAAMH,OAAO,CAAC,EAAE;QACrCJ,OAAO,CAACC,IAAI,CAACX,8CAA8C,CAAC;QAC5D,OAAOc,OAAO;;MAElB,IAAMI,gBAAgB,GAAGJ,OAAO,CAACK,KAAK,CAACC,aAAqD;MAC5F,IAAMA,aAAa,GAAG,UAACC,CAAgC;QACnD;QACA,IAAIA,CAAC,CAACC,gBAAgB,EAAE;UACpB;;QAGJ,IAAInB,UAAU,CAACoB,KAAI,CAACd,iBAAiB,CAAC,EAAE;UACpC,IAAMe,IAAI,GAAGD,KAAI,CAACd,iBAAiB,CAACY,CAAC,CAAC;UACtC,IAAIG,IAAI,IAAI,IAAI,EAAE;YACd;YACA;YACA,IAAMC,SAAS,GAAGrB,WAAW,CAACL,QAAQ,CAAC2B,WAAW,CAACH,KAAI,CAAC,CAAC;YACzDF,CAAC,CAACM,cAAc,EAAE;YAClBtB,WAAW,CAACuB,IAAI,CAACJ,IAAI,EAAE;cAAEK,IAAI,EAAER,CAAC,CAACS,OAAO;cAAEC,GAAG,EAAEV,CAAC,CAACW;YAAO,CAAE,EAAET,KAAI,CAACU,kBAAkB,EAAER,SAAS,CAAC;;;QAIvGP,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAGG,CAAC,CAAC;MACzB,CAAC;MAED,OAAOvB,KAAK,CAACoC,YAAY,CAACpB,OAAO,EAAE;QAAEM,aAAa;MAAA,CAAE,CAAC;IACzD,CAAC;IACL,6BAAC;EAAD,CAAC,CAtC2Cb,gBAAgB,GAC1C4B,cAAW,GAAG,4BAAqBjC,cAAc,CAACK,gBAAgB,CAAC,MAAI;AAsC7F","names":["React","ReactDOM","CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT","CONTEXTMENU_WARN_DECORATOR_NO_METHOD","getDisplayName","isFunction","isDarkTheme","ContextMenu","ContextMenuTarget","WrappedComponent","prototype","renderContextMenu","console","warn","__extends","ContextMenuTargetClass","element","_super","render","isValidElement","oldOnContextMenu","props","onContextMenu","e","defaultPrevented","_this","menu","darkTheme","findDOMNode","preventDefault","show","left","clientX","top","clientY","onContextMenuClose","cloneElement","_a"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/context-menu/contextMenuTarget.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { IConstructor } from \"../../common/constructor\";\nimport {\n    CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT,\n    CONTEXTMENU_WARN_DECORATOR_NO_METHOD,\n} from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { isDarkTheme } from \"../../common/utils/isDarkTheme\";\nimport * as ContextMenu from \"./contextMenu\";\n\nexport interface IContextMenuTargetComponent extends React.Component {\n    render(): React.ReactElement<any> | null | undefined;\n    renderContextMenu: (e: React.MouseEvent<HTMLElement>) => JSX.Element | undefined;\n    onContextMenuClose?: () => void;\n}\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated use ContextMenu2 */\nexport function ContextMenuTarget<T extends IConstructor<IContextMenuTargetComponent>>(WrappedComponent: T) {\n    if (!isFunction(WrappedComponent.prototype.renderContextMenu)) {\n        console.warn(CONTEXTMENU_WARN_DECORATOR_NO_METHOD);\n    }\n\n    return class ContextMenuTargetClass extends WrappedComponent {\n        public static displayName = `ContextMenuTarget(${getDisplayName(WrappedComponent)})`;\n\n        public render() {\n            const element = super.render();\n\n            if (element == null) {\n                // always return `element` in case caller is distinguishing between `null` and `undefined`\n                return element;\n            }\n\n            if (!React.isValidElement<any>(element)) {\n                console.warn(CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n                return element;\n            }\n            const oldOnContextMenu = element.props.onContextMenu as React.MouseEventHandler<HTMLElement>;\n            const onContextMenu = (e: React.MouseEvent<HTMLElement>) => {\n                // support nested menus (inner menu target would have called preventDefault())\n                if (e.defaultPrevented) {\n                    return;\n                }\n\n                if (isFunction(this.renderContextMenu)) {\n                    const menu = this.renderContextMenu(e);\n                    if (menu != null) {\n                        // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n                        /* eslint-disable-next-line react/no-find-dom-node */\n                        const darkTheme = isDarkTheme(ReactDOM.findDOMNode(this));\n                        e.preventDefault();\n                        ContextMenu.show(menu, { left: e.clientX, top: e.clientY }, this.onContextMenuClose, darkTheme);\n                    }\n                }\n\n                oldOnContextMenu?.(e);\n            };\n\n            return React.cloneElement(element, { onContextMenu });\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}