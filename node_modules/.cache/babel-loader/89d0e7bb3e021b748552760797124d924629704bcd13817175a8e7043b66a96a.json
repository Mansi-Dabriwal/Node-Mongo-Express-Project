{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT, HOTKEYS_WARN_DECORATOR_NO_METHOD } from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\n/* eslint-disable deprecation/deprecation */\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\nexport function HotkeysTarget(WrappedComponent) {\n  var _a;\n  if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n    console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n  }\n  return _a = /** @class */function (_super) {\n    __extends(HotkeysTargetClass, _super);\n    function HotkeysTargetClass() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      /** @internal */\n      _this.globalHotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n      /** @internal */\n      _this.localHotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n      return _this;\n    }\n    HotkeysTargetClass.prototype.componentDidMount = function () {\n      if (_super.prototype.componentDidMount != null) {\n        _super.prototype.componentDidMount.call(this);\n      }\n      // attach global key event listeners\n      document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n      document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n    };\n    HotkeysTargetClass.prototype.componentWillUnmount = function () {\n      var _a;\n      (_a = _super.prototype.componentWillUnmount) === null || _a === void 0 ? void 0 : _a.call(this);\n      document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n      document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n      this.globalHotkeysEvents.clear();\n      this.localHotkeysEvents.clear();\n    };\n    HotkeysTargetClass.prototype.render = function () {\n      var _this = this;\n      var element = _super.prototype.render.call(this);\n      if (element == null) {\n        // always return `element` in case caller is distinguishing between `null` and `undefined`\n        return element;\n      }\n      if (!React.isValidElement(element)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n        return element;\n      }\n      if (isFunction(this.renderHotkeys)) {\n        var hotkeys = this.renderHotkeys();\n        if (this.localHotkeysEvents) {\n          this.localHotkeysEvents.setHotkeys(hotkeys.props);\n        }\n        if (this.globalHotkeysEvents) {\n          this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n        }\n        if (this.localHotkeysEvents.count() > 0) {\n          var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n          var _a = element.props,\n            existingKeyDown_1 = _a.onKeyDown,\n            existingKeyUp_1 = _a.onKeyUp;\n          var handleKeyDownWrapper = function (e) {\n            _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);\n            existingKeyDown_1 === null || existingKeyDown_1 === void 0 ? void 0 : existingKeyDown_1(e);\n          };\n          var handleKeyUpWrapper = function (e) {\n            _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);\n            existingKeyUp_1 === null || existingKeyUp_1 === void 0 ? void 0 : existingKeyUp_1(e);\n          };\n          return React.cloneElement(element, {\n            onKeyDown: handleKeyDownWrapper,\n            onKeyUp: handleKeyUpWrapper,\n            tabIndex: tabIndex\n          });\n        }\n      }\n      return element;\n    };\n    return HotkeysTargetClass;\n  }(WrappedComponent), _a.displayName = \"HotkeysTarget(\".concat(getDisplayName(WrappedComponent), \")\"), _a;\n}","map":{"version":3,"mappings":"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","names":["React","HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT","HOTKEYS_WARN_DECORATOR_NO_METHOD","getDisplayName","isFunction","HotkeyScope","HotkeysEvents","HotkeysTarget","WrappedComponent","prototype","renderHotkeys","console","warn","__extends","_this","GLOBAL","LOCAL","HotkeysTargetClass","_super","componentDidMount","document","addEventListener","globalHotkeysEvents","handleKeyDown","handleKeyUp","componentWillUnmount","removeEventListener","clear","localHotkeysEvents","element","render","isValidElement","hotkeys","setHotkeys","props","count","tabIndex","undefined","existingKeyDown_1","existingKeyUp_1","handleKeyDownWrapper","e","nativeEvent","handleKeyUpWrapper","cloneElement","onKeyDown","onKeyUp","_a"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/hotkeys/hotkeysTarget.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { IConstructor } from \"../../common/constructor\";\nimport { HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT, HOTKEYS_WARN_DECORATOR_NO_METHOD } from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\nimport { IHotkeysProps } from \"./hotkeysTypes\";\n\nexport interface IHotkeysTargetComponent extends React.Component {\n    /** Components decorated with the `@HotkeysTarget` decorator must implement React's component `render` function. */\n    render(): React.ReactElement<any> | null | undefined;\n\n    /**\n     * Components decorated with the `@HotkeysTarget` decorator must implement\n     * this method, and it must return a `Hotkeys` React element.\n     */\n    renderHotkeys: () => React.ReactElement<IHotkeysProps>;\n}\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\nexport function HotkeysTarget<T extends IConstructor<IHotkeysTargetComponent>>(WrappedComponent: T) {\n    if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n    }\n\n    return class HotkeysTargetClass extends WrappedComponent {\n        public static displayName = `HotkeysTarget(${getDisplayName(WrappedComponent)})`;\n\n        /** @internal */\n        public globalHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n\n        /** @internal */\n        public localHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n\n        public componentDidMount() {\n            if (super.componentDidMount != null) {\n                super.componentDidMount();\n            }\n\n            // attach global key event listeners\n            document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n        }\n\n        public componentWillUnmount() {\n            super.componentWillUnmount?.();\n            document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n\n            this.globalHotkeysEvents.clear();\n            this.localHotkeysEvents.clear();\n        }\n\n        public render() {\n            const element = super.render() as JSX.Element;\n\n            if (element == null) {\n                // always return `element` in case caller is distinguishing between `null` and `undefined`\n                return element;\n            }\n\n            if (!React.isValidElement<any>(element)) {\n                console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n                return element;\n            }\n\n            if (isFunction(this.renderHotkeys)) {\n                const hotkeys = this.renderHotkeys();\n                if (this.localHotkeysEvents) {\n                    this.localHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n                if (this.globalHotkeysEvents) {\n                    this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n\n                if (this.localHotkeysEvents.count() > 0) {\n                    const tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n\n                    const { onKeyDown: existingKeyDown, onKeyUp: existingKeyUp } = element.props;\n\n                    const handleKeyDownWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyDown(e.nativeEvent as KeyboardEvent);\n                        existingKeyDown?.(e);\n                    };\n\n                    const handleKeyUpWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyUp(e.nativeEvent as KeyboardEvent);\n                        existingKeyUp?.(e);\n                    };\n                    return React.cloneElement(element, {\n                        onKeyDown: handleKeyDownWrapper,\n                        onKeyUp: handleKeyUpWrapper,\n                        tabIndex,\n                    });\n                }\n            }\n            return element;\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}