{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX, Intent } from \"../../common\";\nimport { H4 } from \"../html/html\";\nimport { Icon, IconSize } from \"../icon/icon\";\nvar Callout = /** @class */function (_super) {\n  __extends(Callout, _super);\n  function Callout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Callout.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      className = _b.className,\n      children = _b.children,\n      icon = _b.icon,\n      intent = _b.intent,\n      title = _b.title,\n      htmlProps = __rest(_b, [\"className\", \"children\", \"icon\", \"intent\", \"title\"]);\n    var iconName = this.getIconName(icon, intent);\n    var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), (_a = {}, _a[Classes.CALLOUT_ICON] = iconName != null, _a), className);\n    return React.createElement(\"div\", __assign({\n      className: classes\n    }, htmlProps), iconName && React.createElement(Icon, {\n      icon: iconName,\n      size: IconSize.LARGE,\n      \"aria-hidden\": true,\n      tabIndex: -1\n    }), title && React.createElement(H4, null, title), children);\n  };\n  Callout.prototype.getIconName = function (icon, intent) {\n    // 1. no icon\n    if (icon === null) {\n      return undefined;\n    }\n    // 2. defined iconName prop\n    if (icon !== undefined) {\n      return icon;\n    }\n    // 3. default intent icon\n    switch (intent) {\n      case Intent.DANGER:\n        return \"error\";\n      case Intent.PRIMARY:\n        return \"info-sign\";\n      case Intent.WARNING:\n        return \"warning-sign\";\n      case Intent.SUCCESS:\n        return \"tick\";\n      default:\n        return undefined;\n    }\n  };\n  Callout.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Callout\");\n  return Callout;\n}(AbstractPureComponent2);\nexport { Callout };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SACIC,sBAAsB,EACtBC,OAAO,EACPC,kBAAkB,EAElBC,MAAM,QAIH,cAAc;AACrB,SAASC,EAAE,QAAQ,cAAc;AACjC,SAASC,IAAI,EAAYC,QAAQ,QAAQ,cAAc;AAmCvD;EAA6BC;EAA7B;;EA6CA;EA1CWC,wBAAM,GAAb;;IACI,IAAMC,KAA6D,IAAI,CAACC,KAAK;MAArEC,SAAS;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,MAAM;MAAEC,KAAK;MAAKC,SAAS,cAAxD,oDAA0D,CAAa;IAC7E,IAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACL,IAAI,EAAEC,MAAM,CAAC;IAC/C,IAAMK,OAAO,GAAGrB,UAAU,CACtBG,OAAO,CAACmB,OAAO,EACfnB,OAAO,CAACoB,WAAW,CAACP,MAAM,CAAC,YACzBQ,GAACrB,OAAO,CAACsB,YAAY,IAAGN,QAAQ,IAAI,IAAI,OAC1CN,SAAS,CACZ;IAED,OACIZ;MAAKY,SAAS,EAAEQ;IAAO,GAAMH,SAAS,GACjCC,QAAQ,IAAIlB,oBAACM,IAAI;MAACQ,IAAI,EAAEI,QAAQ;MAAEO,IAAI,EAAElB,QAAQ,CAACmB,KAAK;MAAA,eAAe,IAAI;MAAEC,QAAQ,EAAE,CAAC;IAAC,EAAI,EAC3FX,KAAK,IAAIhB,oBAACK,EAAE,QAAEW,KAAK,CAAM,EACzBH,QAAQ,CACP;EAEd,CAAC;EAEOJ,6BAAW,GAAnB,UAAoBK,IAA2B,EAAEC,MAAe;IAC5D;IACA,IAAID,IAAI,KAAK,IAAI,EAAE;MACf,OAAOc,SAAS;;IAEpB;IACA,IAAId,IAAI,KAAKc,SAAS,EAAE;MACpB,OAAOd,IAAI;;IAEf;IACA,QAAQC,MAAM;MACV,KAAKX,MAAM,CAACyB,MAAM;QACd,OAAO,OAAO;MAClB,KAAKzB,MAAM,CAAC0B,OAAO;QACf,OAAO,WAAW;MACtB,KAAK1B,MAAM,CAAC2B,OAAO;QACf,OAAO,cAAc;MACzB,KAAK3B,MAAM,CAAC4B,OAAO;QACf,OAAO,MAAM;MACjB;QACI,OAAOJ,SAAS;IAAC;EAE7B,CAAC;EA3CanB,mBAAW,GAAG,UAAGN,kBAAkB,aAAU;EA4C/D,cAAC;CAAA,CA7C4BF,sBAAsB;SAAtCQ,OAAO","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","Intent","H4","Icon","IconSize","__extends","Callout","_b","props","className","children","icon","intent","title","htmlProps","iconName","getIconName","classes","CALLOUT","intentClass","_a","CALLOUT_ICON","size","LARGE","tabIndex","undefined","DANGER","PRIMARY","WARNING","SUCCESS"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/callout/callout.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractPureComponent2,\n    Classes,\n    DISPLAYNAME_PREFIX,\n    HTMLDivProps,\n    Intent,\n    IntentProps,\n    MaybeElement,\n    Props,\n} from \"../../common\";\nimport { H4 } from \"../html/html\";\nimport { Icon, IconName, IconSize } from \"../icon/icon\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type CalloutProps = ICalloutProps;\n/** @deprecated use CalloutProps */\nexport interface ICalloutProps extends IntentProps, Props, HTMLDivProps {\n    /** Callout contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side.\n     *\n     * If this prop is omitted or `undefined`, the `intent` prop will determine a default icon.\n     * If this prop is explicitly `null`, no icon will be displayed (regardless of `intent`).\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Visual intent color to apply to background, title, and icon.\n     *\n     * Defining this prop also applies a default icon, if the `icon` prop is omitted.\n     */\n    intent?: Intent;\n\n    /**\n     * String content of optional title element.\n     *\n     * Due to a conflict with the HTML prop types, to provide JSX content simply\n     * pass `<H4>JSX title content</H4>` as first `children` element instead of\n     * using this prop (note uppercase tag name to use the Blueprint Heading\n     * component).\n     */\n    title?: string;\n}\n\nexport class Callout extends AbstractPureComponent2<CalloutProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Callout`;\n\n    public render() {\n        const { className, children, icon, intent, title, ...htmlProps } = this.props;\n        const iconName = this.getIconName(icon, intent);\n        const classes = classNames(\n            Classes.CALLOUT,\n            Classes.intentClass(intent),\n            { [Classes.CALLOUT_ICON]: iconName != null },\n            className,\n        );\n\n        return (\n            <div className={classes} {...htmlProps}>\n                {iconName && <Icon icon={iconName} size={IconSize.LARGE} aria-hidden={true} tabIndex={-1} />}\n                {title && <H4>{title}</H4>}\n                {children}\n            </div>\n        );\n    }\n\n    private getIconName(icon?: CalloutProps[\"icon\"], intent?: Intent): IconName | MaybeElement {\n        // 1. no icon\n        if (icon === null) {\n            return undefined;\n        }\n        // 2. defined iconName prop\n        if (icon !== undefined) {\n            return icon;\n        }\n        // 3. default intent icon\n        switch (intent) {\n            case Intent.DANGER:\n                return \"error\";\n            case Intent.PRIMARY:\n                return \"info-sign\";\n            case Intent.WARNING:\n                return \"warning-sign\";\n            case Intent.SUCCESS:\n                return \"tick\";\n            default:\n                return undefined;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}