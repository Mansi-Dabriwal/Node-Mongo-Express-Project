{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\n/* eslint-disable deprecation/deprecation */\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Boundary, Classes, Position, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList } from \"../overflow-list/overflowList\";\nimport { Popover } from \"../popover/popover\";\nimport { Breadcrumb } from \"./breadcrumb\";\n/** @deprecated use { Breadcrumbs2 } from \"@blueprintjs/popover2\" */\nvar Breadcrumbs = /** @class */function (_super) {\n  __extends(Breadcrumbs, _super);\n  function Breadcrumbs() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.renderOverflow = function (items) {\n      var collapseFrom = _this.props.collapseFrom;\n      var position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;\n      var orderedItems = items;\n      if (collapseFrom === Boundary.START) {\n        // If we're collapsing from the start, the menu should be read from the bottom to the\n        // top, continuing with the breadcrumbs to the right. Since this means the first\n        // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n        // order.\n        orderedItems = items.slice().reverse();\n      }\n      return React.createElement(\"li\", null, React.createElement(Popover, __assign({\n        position: position,\n        disabled: orderedItems.length === 0,\n        content: React.createElement(Menu, null, orderedItems.map(_this.renderOverflowBreadcrumb))\n      }, _this.props.popoverProps), React.createElement(\"span\", {\n        className: Classes.BREADCRUMBS_COLLAPSED\n      })));\n    };\n    _this.renderOverflowBreadcrumb = function (props, index) {\n      var isClickable = props.href != null || props.onClick != null;\n      var htmlProps = removeNonHTMLProps(props);\n      return React.createElement(MenuItem, __assign({\n        disabled: !isClickable\n      }, htmlProps, {\n        text: props.text,\n        key: index\n      }));\n    };\n    _this.renderBreadcrumbWrapper = function (props, index) {\n      var isCurrent = _this.props.items[_this.props.items.length - 1] === props;\n      return React.createElement(\"li\", {\n        key: index\n      }, _this.renderBreadcrumb(props, isCurrent));\n    };\n    return _this;\n  }\n  Breadcrumbs.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      collapseFrom = _a.collapseFrom,\n      items = _a.items,\n      minVisibleItems = _a.minVisibleItems,\n      _b = _a.overflowListProps,\n      overflowListProps = _b === void 0 ? {} : _b;\n    return React.createElement(OverflowList, __assign({\n      collapseFrom: collapseFrom,\n      minVisibleItems: minVisibleItems,\n      tagName: \"ul\"\n    }, overflowListProps, {\n      className: classNames(Classes.BREADCRUMBS, overflowListProps.className, className),\n      items: items,\n      overflowRenderer: this.renderOverflow,\n      visibleItemRenderer: this.renderBreadcrumbWrapper\n    }));\n  };\n  Breadcrumbs.prototype.renderBreadcrumb = function (props, isCurrent) {\n    if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n      return this.props.currentBreadcrumbRenderer(props);\n    } else if (this.props.breadcrumbRenderer != null) {\n      return this.props.breadcrumbRenderer(props);\n    } else {\n      // allow user to override 'current' prop\n      return React.createElement(Breadcrumb, __assign({\n        current: isCurrent\n      }, props));\n    }\n  };\n  Breadcrumbs.defaultProps = {\n    collapseFrom: Boundary.START\n  };\n  return Breadcrumbs;\n}(AbstractPureComponent2);\nexport { Breadcrumbs };","map":{"version":3,"mappings":"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","names":["classNames","React","AbstractPureComponent2","Boundary","Classes","Position","removeNonHTMLProps","Menu","MenuItem","OverflowList","Popover","Breadcrumb","__extends","_this","items","props","position","collapseFrom","END","BOTTOM_RIGHT","BOTTOM_LEFT","orderedItems","START","slice","reverse","disabled","length","content","map","renderOverflowBreadcrumb","popoverProps","className","BREADCRUMBS_COLLAPSED","index","isClickable","href","onClick","htmlProps","text","key","isCurrent","renderBreadcrumb","Breadcrumbs","minVisibleItems","_b","overflowListProps","tagName","BREADCRUMBS","overflowRenderer","renderOverflow","visibleItemRenderer","renderBreadcrumbWrapper","currentBreadcrumbRenderer","breadcrumbRenderer","current"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/breadcrumbs/breadcrumbs.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable deprecation/deprecation */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Boundary, Classes, Position, Props, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList, OverflowListProps } from \"../overflow-list/overflowList\";\nimport { IPopoverProps, Popover } from \"../popover/popover\";\nimport { Breadcrumb, BreadcrumbProps } from \"./breadcrumb\";\n\nexport type BreadcrumbsProps = IBreadcrumbsProps;\n/** @deprecated use BreadcrumbsProps */\nexport interface IBreadcrumbsProps extends Props {\n    /**\n     * Callback invoked to render visible breadcrumbs. Best practice is to\n     * render a `<Breadcrumb>` element. If `currentBreadcrumbRenderer` is also\n     * supplied, that callback will be used for the current breadcrumb instead.\n     *\n     * @default Breadcrumb\n     */\n    breadcrumbRenderer?: (props: BreadcrumbProps) => JSX.Element;\n\n    /**\n     * Which direction the breadcrumbs should collapse from: start or end.\n     *\n     * @default Boundary.START\n     */\n    collapseFrom?: Boundary;\n\n    /**\n     * Callback invoked to render the current breadcrumb, which is the last\n     * element in the `items` array.\n     *\n     * If this prop is omitted, `breadcrumbRenderer` will be invoked for the\n     * current breadcrumb instead.\n     */\n    currentBreadcrumbRenderer?: (props: BreadcrumbProps) => JSX.Element;\n\n    /**\n     * All breadcrumbs to display. Breadcrumbs that do not fit in the container\n     * will be rendered in an overflow menu instead.\n     */\n    items: readonly BreadcrumbProps[];\n\n    /**\n     * The minimum number of visible breadcrumbs that should never collapse into\n     * the overflow menu, regardless of DOM dimensions.\n     *\n     * @default 0\n     */\n    minVisibleItems?: number;\n\n    /**\n     * Props to spread to `OverflowList`. Note that `items`,\n     * `overflowRenderer`, and `visibleItemRenderer` cannot be changed.\n     */\n    overflowListProps?: Partial<OverflowListProps<BreadcrumbProps>>;\n\n    /**\n     * Props to spread to the `Popover` showing the overflow menu.\n     */\n    popoverProps?: IPopoverProps;\n}\n\n/** @deprecated use { Breadcrumbs2 } from \"@blueprintjs/popover2\" */\nexport class Breadcrumbs extends AbstractPureComponent2<BreadcrumbsProps> {\n    public static defaultProps: Partial<BreadcrumbsProps> = {\n        collapseFrom: Boundary.START,\n    };\n\n    public render() {\n        const { className, collapseFrom, items, minVisibleItems, overflowListProps = {} } = this.props;\n        return (\n            <OverflowList\n                collapseFrom={collapseFrom}\n                minVisibleItems={minVisibleItems}\n                tagName=\"ul\"\n                {...overflowListProps}\n                className={classNames(Classes.BREADCRUMBS, overflowListProps.className, className)}\n                items={items}\n                overflowRenderer={this.renderOverflow}\n                visibleItemRenderer={this.renderBreadcrumbWrapper}\n            />\n        );\n    }\n\n    private renderOverflow = (items: readonly BreadcrumbProps[]) => {\n        const { collapseFrom } = this.props;\n        const position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;\n        let orderedItems = items;\n        if (collapseFrom === Boundary.START) {\n            // If we're collapsing from the start, the menu should be read from the bottom to the\n            // top, continuing with the breadcrumbs to the right. Since this means the first\n            // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n            // order.\n            orderedItems = items.slice().reverse();\n        }\n\n        return (\n            <li>\n                <Popover\n                    position={position}\n                    disabled={orderedItems.length === 0}\n                    content={<Menu>{orderedItems.map(this.renderOverflowBreadcrumb)}</Menu>}\n                    {...this.props.popoverProps}\n                >\n                    <span className={Classes.BREADCRUMBS_COLLAPSED} />\n                </Popover>\n            </li>\n        );\n    };\n\n    private renderOverflowBreadcrumb = (props: BreadcrumbProps, index: number) => {\n        const isClickable = props.href != null || props.onClick != null;\n        const htmlProps = removeNonHTMLProps(props);\n        return <MenuItem disabled={!isClickable} {...htmlProps} text={props.text} key={index} />;\n    };\n\n    private renderBreadcrumbWrapper = (props: BreadcrumbProps, index: number) => {\n        const isCurrent = this.props.items[this.props.items.length - 1] === props;\n        return <li key={index}>{this.renderBreadcrumb(props, isCurrent)}</li>;\n    };\n\n    private renderBreadcrumb(props: BreadcrumbProps, isCurrent: boolean) {\n        if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n            return this.props.currentBreadcrumbRenderer(props);\n        } else if (this.props.breadcrumbRenderer != null) {\n            return this.props.breadcrumbRenderer(props);\n        } else {\n            // allow user to override 'current' prop\n            return <Breadcrumb current={isCurrent} {...props} />;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}