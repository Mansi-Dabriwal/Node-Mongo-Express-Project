{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nvar REACT_CONTEXT_TYPES = {\n  blueprintPortalClassName: function (obj, key) {\n    if (obj[key] != null && typeof obj[key] !== \"string\") {\n      return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n    }\n    return undefined;\n  }\n};\n/**\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\nvar Portal = /** @class */function (_super) {\n  __extends(Portal, _super);\n  function Portal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.context = {};\n    _this.state = {\n      hasMounted: false\n    };\n    _this.portalElement = null;\n    return _this;\n  }\n  Portal.prototype.render = function () {\n    // Only render `children` once this component has mounted in a browser environment, so they are\n    // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n    // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n    if (typeof document === \"undefined\" || !this.state.hasMounted || this.portalElement === null) {\n      return null;\n    } else {\n      return ReactDOM.createPortal(this.props.children, this.portalElement);\n    }\n  };\n  Portal.prototype.componentDidMount = function () {\n    if (this.props.container == null) {\n      return;\n    }\n    this.portalElement = this.createContainerElement();\n    this.props.container.appendChild(this.portalElement);\n    /* eslint-disable-next-line react/no-did-mount-set-state */\n    this.setState({\n      hasMounted: true\n    }, this.props.onChildrenMount);\n  };\n  Portal.prototype.componentDidUpdate = function (prevProps) {\n    // update className prop on portal DOM element\n    if (this.portalElement != null && prevProps.className !== this.props.className) {\n      maybeRemoveClass(this.portalElement.classList, prevProps.className);\n      maybeAddClass(this.portalElement.classList, this.props.className);\n    }\n  };\n  Portal.prototype.componentWillUnmount = function () {\n    var _a;\n    (_a = this.portalElement) === null || _a === void 0 ? void 0 : _a.remove();\n  };\n  Portal.prototype.createContainerElement = function () {\n    var container = document.createElement(\"div\");\n    container.classList.add(Classes.PORTAL);\n    maybeAddClass(container.classList, this.props.className);\n    if (this.context != null) {\n      maybeAddClass(container.classList, this.context.blueprintPortalClassName);\n    }\n    return container;\n  };\n  Portal.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Portal\");\n  Portal.contextTypes = REACT_CONTEXT_TYPES;\n  Portal.defaultProps = {\n    container: typeof document !== \"undefined\" ? document.body : undefined\n  };\n  return Portal;\n}(React.Component);\nexport { Portal };\nfunction maybeRemoveClass(classList, className) {\n  if (className != null && className !== \"\") {\n    classList.remove.apply(classList, className.split(\" \"));\n  }\n}\nfunction maybeAddClass(classList, className) {\n  if (className != null && className !== \"\") {\n    classList.add.apply(classList, className.split(\" \"));\n  }\n}","map":{"version":3,"mappings":"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","names":["React","ReactDOM","Classes","Errors","DISPLAYNAME_PREFIX","REACT_CONTEXT_TYPES","blueprintPortalClassName","obj","key","Error","PORTAL_CONTEXT_CLASS_NAME_STRING","undefined","__extends","_this","hasMounted","Portal","document","state","portalElement","createPortal","props","children","container","createContainerElement","appendChild","setState","onChildrenMount","prevProps","className","maybeRemoveClass","classList","maybeAddClass","remove","createElement","add","PORTAL","context","body","Component","split"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/portal/portal.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport * as Classes from \"../../common/classes\";\nimport { ValidationMap } from \"../../common/context\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type PortalProps = IPortalProps;\n/** @deprecated use PortalProps */\nexport interface IPortalProps extends Props {\n    /** Contents to send through the portal. */\n    children: React.ReactNode;\n\n    /**\n     * Callback invoked when the children of this `Portal` have been added to the DOM.\n     */\n    onChildrenMount?: () => void;\n\n    /**\n     * The HTML element that children will be mounted to.\n     *\n     * @default document.body\n     */\n    container?: HTMLElement;\n}\n\nexport interface IPortalState {\n    hasMounted: boolean;\n}\n\n/** @deprecated use PortalLegacyContext */\nexport type IPortalContext = PortalLegacyContext;\nexport interface PortalLegacyContext {\n    /** Additional CSS classes to add to all `Portal` elements in this React context. */\n    blueprintPortalClassName?: string;\n}\n\nconst REACT_CONTEXT_TYPES: ValidationMap<PortalLegacyContext> = {\n    blueprintPortalClassName: (obj: PortalLegacyContext, key: keyof PortalLegacyContext) => {\n        if (obj[key] != null && typeof obj[key] !== \"string\") {\n            return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n        }\n        return undefined;\n    },\n};\n\n/**\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\nexport class Portal extends React.Component<PortalProps, IPortalState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Portal`;\n\n    public static contextTypes = REACT_CONTEXT_TYPES;\n\n    public static defaultProps: Partial<PortalProps> = {\n        container: typeof document !== \"undefined\" ? document.body : undefined,\n    };\n\n    public context: PortalLegacyContext = {};\n\n    public state: IPortalState = { hasMounted: false };\n\n    private portalElement: HTMLElement | null = null;\n\n    public render() {\n        // Only render `children` once this component has mounted in a browser environment, so they are\n        // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n        // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n        if (typeof document === \"undefined\" || !this.state.hasMounted || this.portalElement === null) {\n            return null;\n        } else {\n            return ReactDOM.createPortal(this.props.children, this.portalElement);\n        }\n    }\n\n    public componentDidMount() {\n        if (this.props.container == null) {\n            return;\n        }\n        this.portalElement = this.createContainerElement();\n        this.props.container.appendChild(this.portalElement);\n        /* eslint-disable-next-line react/no-did-mount-set-state */\n        this.setState({ hasMounted: true }, this.props.onChildrenMount);\n    }\n\n    public componentDidUpdate(prevProps: PortalProps) {\n        // update className prop on portal DOM element\n        if (this.portalElement != null && prevProps.className !== this.props.className) {\n            maybeRemoveClass(this.portalElement.classList, prevProps.className);\n            maybeAddClass(this.portalElement.classList, this.props.className);\n        }\n    }\n\n    public componentWillUnmount() {\n        this.portalElement?.remove();\n    }\n\n    private createContainerElement() {\n        const container = document.createElement(\"div\");\n        container.classList.add(Classes.PORTAL);\n        maybeAddClass(container.classList, this.props.className);\n        if (this.context != null) {\n            maybeAddClass(container.classList, this.context.blueprintPortalClassName);\n        }\n        return container;\n    }\n}\n\nfunction maybeRemoveClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.remove(...className.split(\" \"));\n    }\n}\n\nfunction maybeAddClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.add(...className.split(\" \"));\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}