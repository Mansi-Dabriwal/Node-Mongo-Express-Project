{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nvar FormGroup = /** @class */function (_super) {\n  __extends(FormGroup, _super);\n  function FormGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FormGroup.prototype.render = function () {\n    var _a = this.props,\n      children = _a.children,\n      contentClassName = _a.contentClassName,\n      helperText = _a.helperText,\n      label = _a.label,\n      labelFor = _a.labelFor,\n      labelInfo = _a.labelInfo,\n      style = _a.style,\n      subLabel = _a.subLabel;\n    return React.createElement(\"div\", {\n      className: this.getClassName(),\n      style: style\n    }, label && React.createElement(\"label\", {\n      className: Classes.LABEL,\n      htmlFor: labelFor\n    }, label, \" \", React.createElement(\"span\", {\n      className: Classes.TEXT_MUTED\n    }, labelInfo)), subLabel && React.createElement(\"div\", {\n      className: Classes.FORM_GROUP_SUB_LABEL\n    }, subLabel), React.createElement(\"div\", {\n      className: classNames(Classes.FORM_CONTENT, contentClassName)\n    }, children, helperText && React.createElement(\"div\", {\n      className: Classes.FORM_HELPER_TEXT\n    }, helperText)));\n  };\n  FormGroup.prototype.getClassName = function () {\n    var _a;\n    var _b = this.props,\n      className = _b.className,\n      disabled = _b.disabled,\n      inline = _b.inline,\n      intent = _b.intent;\n    return classNames(Classes.FORM_GROUP, Classes.intentClass(intent), (_a = {}, _a[Classes.DISABLED] = disabled, _a[Classes.INLINE] = inline, _a), className);\n  };\n  FormGroup.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".FormGroup\");\n  return FormGroup;\n}(AbstractPureComponent2);\nexport { FormGroup };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,EAAEC,OAAO,QAAQ,cAAc;AAC9D,SAASC,kBAAkB,QAA4B,oBAAoB;AAwD3E;EAA+BC;EAA/B;;EAiCA;EA9BWC,0BAAM,GAAb;IACU,SAA0F,IAAI,CAACC,KAAK;MAAlGC,QAAQ;MAAEC,gBAAgB;MAAEC,UAAU;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,KAAK;MAAEC,QAAQ,cAAe;IAC1G,OACId;MAAKe,SAAS,EAAE,IAAI,CAACC,YAAY,EAAE;MAAEH,KAAK,EAAEA;IAAK,GAC5CH,KAAK,IACFV;MAAOe,SAAS,EAAEb,OAAO,CAACe,KAAK;MAAEC,OAAO,EAAEP;IAAQ,GAC7CD,KAAK,OAAEV;MAAMe,SAAS,EAAEb,OAAO,CAACiB;IAAU,GAAGP,SAAS,CAAQ,CAEtE,EACAE,QAAQ,IAAId;MAAKe,SAAS,EAAEb,OAAO,CAACkB;IAAoB,GAAGN,QAAQ,CAAO,EAC3Ed;MAAKe,SAAS,EAAEhB,UAAU,CAACG,OAAO,CAACmB,YAAY,EAAEb,gBAAgB;IAAC,GAC7DD,QAAQ,EACRE,UAAU,IAAIT;MAAKe,SAAS,EAAEb,OAAO,CAACoB;IAAgB,GAAGb,UAAU,CAAO,CACzE,CACJ;EAEd,CAAC;EAEOJ,gCAAY,GAApB;;IACU,SAA0C,IAAI,CAACC,KAAK;MAAlDS,SAAS;MAAEQ,QAAQ;MAAEC,MAAM;MAAEC,MAAM,YAAe;IAC1D,OAAO1B,UAAU,CACbG,OAAO,CAACwB,UAAU,EAClBxB,OAAO,CAACyB,WAAW,CAACF,MAAM,CAAC,YAEvBG,GAAC1B,OAAO,CAAC2B,QAAQ,IAAGN,QAAQ,EAC5BK,GAAC1B,OAAO,CAAC4B,MAAM,IAAGN,MAAM,OAE5BT,SAAS,CACZ;EACL,CAAC;EA/BaV,qBAAW,GAAG,UAAGF,kBAAkB,eAAY;EAgCjE,gBAAC;CAAA,CAjC8BF,sBAAsB;SAAxCI,SAAS","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","__extends","FormGroup","props","children","contentClassName","helperText","label","labelFor","labelInfo","style","subLabel","className","getClassName","LABEL","htmlFor","TEXT_MUTED","FORM_GROUP_SUB_LABEL","FORM_CONTENT","FORM_HELPER_TEXT","disabled","inline","intent","FORM_GROUP","intentClass","_a","DISABLED","INLINE"],"sources":["/Users/mansidabriwal/Documents/Web design class/React-Assignment/react-app/node_modules/@blueprintjs/core/src/components/forms/formGroup.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, IntentProps, Props } from \"../../common/props\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FormGroupProps = IFormGroupProps;\n/** @deprecated use FormGroupProps */\nexport interface IFormGroupProps extends IntentProps, Props {\n    /** Group contents. */\n    children?: React.ReactNode;\n\n    /**\n     * A space-delimited list of class names to pass along to the\n     * `Classes.FORM_CONTENT` element that contains `children`.\n     */\n    contentClassName?: string;\n\n    /**\n     * Whether form group should appear as non-interactive.\n     * Remember that `input` elements must be disabled separately.\n     */\n    disabled?: boolean;\n\n    /**\n     * Optional helper text. The given content will be wrapped in\n     * `Classes.FORM_HELPER_TEXT` and displayed beneath `children`.\n     * Helper text color is determined by the `intent`.\n     */\n    helperText?: React.ReactNode;\n\n    /** Whether to render the label and children on a single line. */\n    inline?: boolean;\n\n    /** Label of this form group. */\n    label?: React.ReactNode;\n\n    /**\n     * `id` attribute of the labelable form element that this `FormGroup` controls,\n     * used as `<label for>` attribute.\n     */\n    labelFor?: string;\n\n    /**\n     * Optional secondary text that appears after the label.\n     */\n    labelInfo?: React.ReactNode;\n\n    /** CSS properties to apply to the root element. */\n    style?: React.CSSProperties;\n\n    /**\n     * Optional text for `label`. The given content will be wrapped in\n     * `Classes.FORM_GROUP_SUB_LABEL` and displayed beneath `label`. The text color\n     * is determined by the `intent`.\n     */\n    subLabel?: React.ReactNode;\n}\n\nexport class FormGroup extends AbstractPureComponent2<FormGroupProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.FormGroup`;\n\n    public render() {\n        const { children, contentClassName, helperText, label, labelFor, labelInfo, style, subLabel } = this.props;\n        return (\n            <div className={this.getClassName()} style={style}>\n                {label && (\n                    <label className={Classes.LABEL} htmlFor={labelFor}>\n                        {label} <span className={Classes.TEXT_MUTED}>{labelInfo}</span>\n                    </label>\n                )}\n                {subLabel && <div className={Classes.FORM_GROUP_SUB_LABEL}>{subLabel}</div>}\n                <div className={classNames(Classes.FORM_CONTENT, contentClassName)}>\n                    {children}\n                    {helperText && <div className={Classes.FORM_HELPER_TEXT}>{helperText}</div>}\n                </div>\n            </div>\n        );\n    }\n\n    private getClassName() {\n        const { className, disabled, inline, intent } = this.props;\n        return classNames(\n            Classes.FORM_GROUP,\n            Classes.intentClass(intent),\n            {\n                [Classes.DISABLED]: disabled,\n                [Classes.INLINE]: inline,\n            },\n            className,\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}